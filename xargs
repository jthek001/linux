

xargs command in unix or Linux is a powerful command used in conjunction with find and grep command in UNIX to divide a big list of arguments into small list received from standard input. find and grep command produce long list of file names and we often want to either remove them or do some operation on them but many unix operating system doesn't accept such a long list of argument. UNIX xargs command divide that list into sub-list with acceptable length and made it work. 


find . -name '*.txt' | xargs cat | tr -s '[:blank:]' '\n' | sort | uniq -c | sort -k1.1nr | head -20

find . -name '*.mp3' | xargs mp3info

find . -name "*.java" | xargs grep "Stock"


# Xargs Example 3 – delete temporary file using find and xargs

find /tmp -name "*.tmp" | xargs rm

# Xargs Example 4 – xargs -0 to handle space in file name

find /tmp -name "*.tmp" -print0 | xargs -0 rm

/etc cut -d, -f1 smartphones.csv | sort | xargs

find Downloads -name "DomTerm" -type d -print0 | xargs -0 /bin/rm -v -rf "{}"

find Pictures/tecmint/ -name "*.png" -type f -print0 | xargs -0 tar -cvzf images.tar.gz

echo ./Templates/ ./Documents/ | xargs -n 1 cp -v ./Downloads/SIC_Template.xlsx 

# In addition, you can also prompt the user about whether to run each command line and read a line from # the terminal, using the -p flag as shown (simply type y for yes or n for no).
echo ./Templates/ ./Documents/ | xargs -p -n 1 cp -v ./Downloads/SIC_Template.xlsx 




> redirect 
2> redirect error

dev/null


echo -e "joe\tjoe\njoe"  # interpret special chars ( \t is tab, \n newline )
echo -n "joe"            # suppress newline
